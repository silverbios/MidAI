name: Build and Release MidAI

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build for ${{ matrix.os }}-${{ matrix.goarch }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Cache Go Modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Tidy Go modules
        run: go mod tidy

      - name: Install Dependencies
        run: go mod download

      - name: Set Environment Variables
        run: |
          echo "GOOS=$(echo '${{ matrix.os }}' | awk '{print tolower($0)}' | sed 's/windows/windows.exe/; s/macos/darwin/; s/ubuntu/linux/')" >> $GITHUB_ENV
          echo "GOARCH=${{ matrix.goarch }}" >> $GITHUB_ENV
          echo "BUILD_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
          echo "TAG_NAME=${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Build Binary
        run: |
          mkdir -p build
          FILENAME="MidAI-${{ env.TAG_NAME }}-${{ env.GOOS }}-${{ env.GOARCH }}${{ env.GOOS == 'windows.exe' && '.exe' || '' }}"
          go build -o build/$FILENAME .
          echo "BUILT_FILE=$FILENAME" >> $GITHUB_ENV

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: midai-build-${{ env.TAG_NAME }}
          path: build/

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: midai-build-${{ github.ref_name }}
          path: build/

      - name: List Files in Build Directory (Debugging)
        run: ls -lh build/

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            New release of MidAI
            - Built on: ${{ env.BUILD_DATE }}
            - Commit: ${{ github.sha }}
          draft: false
          prerelease: false
          files: build/*
        env:
          GITHUB_TOKEN: ${{ secrets.MIDAIRELEASE }}

