name: Build and Release MidAI

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build for ${{ matrix.os }}-${{ matrix.goarch }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        goarch: [amd64, arm64]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Cache Go Modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Tidy Go modules
        run: go mod tidy

      - name: Install Dependencies
        run: go mod download

      - name: Set Environment Variables
        run: |
          echo "GOOS=${{ matrix.os == 'windows-latest' && 'windows' || matrix.os == 'macos-latest' && 'darwin' || 'linux' }}" >> $GITHUB_ENV
          echo "GOARCH=${{ matrix.goarch }}" >> $GITHUB_ENV
          echo "BUILD_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
          echo "TAG_NAME=${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Build Binary
        run: |
          mkdir -p build
          go build -o build/myapp-${{ env.GOOS }}-${{ env.GOARCH }}-${{ env.BUILD_DATE }}${{ env.GOOS == 'windows' && '.exe' || '' }} .

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: myapp-${{ matrix.os }}-${{ matrix.goarch }}-${{ env.BUILD_DATE }}
          path: build/

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: build/

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }} # Use the pushed tag (e.g., v1.0.0)
          name: Release ${{ github.ref_name }}
          body: |
            New release of MidAI
            - Built on: ${{ env.BUILD_DATE }}
            - Commit: ${{ github.sha }}
          draft: false
          prerelease: false
          files: build/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

